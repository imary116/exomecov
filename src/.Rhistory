NewFreq=two.data$MAF
View(two.data)
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
NewFreq=two.data$MAF
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
two.data$NewFreq=NewFreq
View(two.data)
two.frq=NewFreq
n1=max(one.data$NCHROBS)/2
n2=max(YRI.data$NCHROBS)/2
(YRI.data$NCHROBS)/2
(two.data$NCHROBS)/2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
INCLUDE=(FREQ>0 & FREQ<1)
FREQpop1=FREQpop1[INCLUDE]
FREQpop2=FREQpop2[INCLUDE]
FREQ=FREQ[INCLUDE]
r=2
s2=((FREQpop1-FREQ)^2+(FREQpop2-FREQ)^2)/( (r-1))
FSTVEC=s2/(FREQ*(1-FREQ))
FST1=mean(FSTVEC)
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
n2=max(two.data$NCHROBS)/2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
one.data=read.table("1_test.frq",header=TRUE)
two.data=read.table("2_test.frq",header=TRUE)
one.frq=one.data$MAF
SWITCH1 = one.data$A1!=two.data$A1
NewFreq=two.data$MAF
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
two.data$NewFreq=NewFreq
two.frq=NewFreq
n1=max(one.data$NCHROBS)/2
n2=max(two.data$NCHROBS)/2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
INCLUDE=(FREQ>0 & FREQ<1)
FREQpop1=FREQpop1[INCLUDE]
FREQpop2=FREQpop2[INCLUDE]
FREQ=FREQ[INCLUDE]
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
one.data$NCHROBS
n = 2/2
two.data$NCHROBS
n2 = 4/2
one.frq
two.frq
FREQpop1 = 0
FREQpop2=0.25
FREQ=(FREQpop1+FREQpop2)/2
FREQ>0 & FREQ<1
r=2
s2=((FREQpop1-FREQ)^2+(FREQpop2-FREQ)^2)/( (r-1))
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
n1 = 2/2
n2 = 4/2
FREQpop1 = 0
FREQpop2=0.25
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
n1 = 4/2
n2 = 4/2
FREQpop1 = 0
FREQpop2=0.25
FREQ=(FREQpop1+FREQpop2)/2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
one.frq
two.frq
n1 = 4/2
n2 = 4/2
#per sample
FREQpop1 = 0
FREQpop2=0.5
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
r=2   # r is the number of populations
s2=((FREQpop1-FREQ)^2+(FREQpop2-FREQ)^2)/( (r-1))
FSTVEC=s2/(FREQ*(1-FREQ))
FST1=mean(FSTVEC)
n1 = 4/2
n2 = 4/2
one.frq
two.frq
FREQpop1 = 0.25
FREQpop2=0.75
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
n1 = 2/2
n2 = 4/2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
one.data=read.table("1_test.frq",header=TRUE)
two.data=read.table("2_test.frq",header=TRUE)
one.data$MAF
one.frq=one.data$MAF
SWITCH1 = one.data$A1!=two.data$A1
NewFreq=two.data$MAF
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
two.data$NewFreq=NewFreq
two.frq=NewFreq
two.frq
n1=max(one.data$NCHROBS)/2
n2=max(two.data$NCHROBS)/2
n1
n2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
FREQpop1
FREQpop2
FREQ
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
FREQpop1-FREQ
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSA
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
MSW
MSA-MSW
MSA+(nc-1)*MSW)
MSA+(nc-1)*MSW
MSA-MSW
MSA+(nc-1)*MSW
n1
one.data$NCHROBS
n1 = one.data$NCHROBS
n2 = two.data$NCHROBS
n2
FREQpop1=one.frq
FREQpop1
FREQpop2=two.frq
FREQpop2
FREQ=(FREQpop1+FREQpop2)/2
FREQ
pa1=one.frq
pa2=two.frq
n1*pa1
n2*pa2
n1+n2
pbar=  (((n1*pa1) + (n2*pa2)) / (n1+n2))
pbar
s= 2
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
nc
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
msg
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
paAve=(pa1+pa2)/2
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
n1 = one.data$NCHROBS
n2 = two.data$NCHROBS
pa1=one.frq
pa2=two.frq
paAve=(pa1+pa2)/2
s= 2
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
nc
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
paAve
pbar=  (((n1*pa1) + (n2*pa2)) / (n1+n2))
pbar
nc=  (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
nc=  (n1+n2)) -(((n1^2 + n2^2)/(n1+n2)))
nc=  (n1+n2) -(((n1^2 + n2^2)/(n1+n2))))
nc=  (n1+n2) -((n1^2 + n2^2)/(n1+n2))
nc
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
nc
msp
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msp
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
one.data$NCHROBS
one.data$NCHROBS
one.data$NCHROBS
sum(one.data$NCHROBS)
one.data$NCHROBS
two.data$NCHROBS
one.data$NCHROBS
two.data$NCHROBS
one.data$NCHROBS[1]
one.data$NCHROBS[1] + two.data$NCHROBS[1]
n1 = one.data$NCHROBS[1]
n2 = one.data$NCHROBS[1] + two.data$NCHROBS[1]
one.frq
two.frq
one.frq[1]
two.frq[1]
pa1=one.frq[1]
pa2=two.frq[1] + one.frq[1]
paAve=(pa1+pa2)/2
s= 2
pbar=  (((n1*pa1) + (n2*pa2)) / (n1+n2))
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
one.frq
pa2
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
nc=  (n1+n2)) -((n1^2 + n2^2)/(n1+n2)))
nc=  (n1+n2) -((n1^2 + n2^2)/(n1+n2)))
nc=  (n1+n2) -((n1^2 + n2^2)/(n1+n2))
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
two.data$NCHROBS[1]
n1 = two.data$NCHROBS[1]
n2 = one.data$NCHROBS[1] + two.data$NCHROBS[1]
pa1=two.frq[1]
pa2=two.frq[1] + one.frq[1]
paAve=(pa1+pa2)/2
s= 2
pbar=  (((n1*pa1) + (n2*pa2)) / (n1+n2))
# average sample size that incorporates variance
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
pbar
paAve
knitr::opts_chunk$set(echo = TRUE)
data(HGDP.bedassle.data)
knitr::opts_chunk$set(echo = TRUE)
install.packages("BEDASSLE")
data(HGDP.bedassle.data)
data(HGDP.bedassle.data)
HGDP.bedassle.data
data(HGDP.bedassle.data)
data(HGDP.bedassle.data)
data('HGDP.bedassle.data')
mtcars
data/HGDP.bedassle.data.rda
knitr::opts_chunk$set(echo = TRUE)
library("BEDASSLE")
ls
data(package = "BEDASSLE")
#data(package = "BEDASSLE")
ds=as.data.frame(data(HGDP.bedassle.data))
View(ds)
#data(package = "BEDASSLE")
ds=as.data.frame(HGDP.bedassle.data)
View(ds)
pop1 <- sample(nrow(HGDP.bedassle.data$allele.counts),1)
pop2 <- sample(nrow(HGDP.bedassle.data$allele.counts),1)
pop1
HGDP.bedassle.data$allele.counts
nrow(HGDP.bedassle.data$allele.counts),1
nrow(HGDP.bedassle.data$allele.counts)
sample(nrow(HGDP.bedassle.data$allele.counts),1)
?sample()
nrow(HGDP.bedassle.data$allele.counts)
sample(nrow(HGDP.bedassle.data$allele.counts),1)
sample(nrow(HGDP.bedassle.data$allele.counts),1)
pop1 <- sample(nrow(HGDP.bedassle.data$allele.counts),1)
pop2 <- sample(nrow(HGDP.bedassle.data$allele.counts),1)
HGDP.bedassle.data$allele.counts[c(pop1,pop2),]
#data(package = "BEDASSLE")
data(HGDP.bedassle.data)
View(HGDP.bedassle.data)
data(HGDP.bedassle.data$allele.counts)
data((HGDP.bedassle.data$allele.counts),1)
data(HGDP.bedassle.data)
data(HGDP.bedassle.data)[1]
two.data
two.data$NCHROBS
View(two.data)
Pop <- c('1','2')
AC_rs1 <- c(2, , 4)
Pop <- c('1','2')
AC_rs1 <- c(2, 4)
ds <- data.fram(Pop,AC_rs1)
Pop <- c('1','2')
AC_rs1 <- c(2, 4)
ds <- data.frame(Pop,AC_rs1)
View(ds)
Pop <- c('1','2')
AC_rs1 <- c(2, 4)
n <- c(1,1)
ds <- data.frame(Pop,AC_rs1)
ds_n <- data.frame(Pop,n)
pairwise.Fst <- calculate.pairwise.Fst(ds,ds_n)
n1 = two.data$NCHROBS
n2 = two.data$NCHROBS
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
MSA-MSW
MSA+(nc-1)*MSW
n1
n2
n1 = one.data$NCHROBS
n2 = two.data$NCHROBS
n1+n2
n1
n2
FREQpop1
FREQpop2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
MSA-MSW
MSA+(nc-1)*MSW
(MSA-MSW)/(MSA+(nc-1)*MSW)
pa1=one.frq
pa2=two.frq
pbar=  (((n1*pa1) + (n2*pa2)) / (n1+n2))
pbar
nc=  (((1/(s-1)) * (n1+n2)) -(((n1^2 + n2^2)/(n1+n2))))
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
nc=  (n1+n2) -((n1^2 + n2^2)/(n1+n2))
paAve=(pa1+pa2)/2
msp=	((1/(s-1))*((n1*((pa1-paAve)^2))+(n2*((pa2-paAve)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
nc=  (n1+n2) -((n1^2 + n2^2)/(n1+n2))
msp=	((1/(s-1))*((n1*((pa1-pbar)^2))+(n2*((pa2-pbar)^2))))
msg=  ((1 / ((n1-1) +(n2-1))) * (( n1 * pa1 * (1-pa1) ) + ( n2 * pa2 * (1-pa2) )))
fst=	((msp-msg)/(msp + ((nc-1)*msg)))
fst
n1=max(one.data$NCHROBS)/2
n2=max(two.data$NCHROBS)/2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
FST2
one.data=read.table("1_test.frq",header=TRUE)
setwd("/Users/myohanne/Downloads/plink_mod")
one.data=read.table("1_test.frq",header=TRUE)
View(one.data)
one.frq=one.data$MAF
SWITCH1 = one.data$A1!=two.data$A1
NewFreq=two.data$MAF
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
two.data$NewFreq=NewFreq
two.frq=NewFreq
View(two.data)
View(one.data)
n1=max(one.data$NCHROBS)/2
n2=max(two.data$NCHROBS)/2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
FST2
one.data=read.table("/Users/myohanne/Downloads/plink_mod/second_1_test.frq",header=TRUE)
two.data=read.table("/Users/myohanne/Downloads/plink_mod/second_2_test.frq",header=TRUE)
one.frq=one.data$MAF
SWITCH1 = one.data$A1!=two.data$A1
NewFreq=two.data$MAF
NewFreq[SWITCH1]=1-two.data$MAF[SWITCH1]
two.data$NewFreq=NewFreq
two.frq=NewFreq
n1=max(one.data$NCHROBS)/2
n2=max(two.data$NCHROBS)/2
#per sample
#n1 = 2/2
#n2 = 4/2
FREQpop1=one.frq
FREQpop2=two.frq
FREQ=(FREQpop1+FREQpop2)/2
r=2
nc=sum(n1+n2)-sum(n1^(2)+n2^(2))/sum(n1+n2)
MSA= (1/(r-1))* (n1*(FREQpop1-FREQ)^2+n2*(FREQpop2-FREQ)^2)
MSW=(1/(n1-1+n2-1))*(n1* FREQpop1*(1-FREQpop1)+n2*FREQpop2*(1-FREQpop2))
numer=sum(MSA-MSW)
denom=(sum(MSA+(nc-1)*MSW))
FST2=numer/denom
FST2
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
setwd("~/Desktop/Broad/tj/exomecov/data")
ds <- read.csv('~/Desktop/Broad/tj/exomecov/data/2021-03-31_gnomad_scz-exome-manifest.txt', sep = "\t", header=T)
setwd("~/Desktop/Broad/tj/exomecov/src")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
setwd("~/Desktop/Broad/tj/exomecov/data")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data')
#setwd("~/Desktop/Broad/tj/exomecov/data")
ds <- read.csv('~/Desktop/Broad/tj/exomecov/data/2021-03-31_gnomad_scz-exome-manifest.txt', sep = "\t", header=T)
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data') # s
ds <- read.csv('2021-03-31_gnomad_scz-exome-manifest.txt', sep = "\t", header=T)
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data') # s
ds <- read.csv('2021-03-31_gnomad_scz-exome-manifest.txt', sep = "\t", header=T)
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data') # s
ds <- read.csv('~/Desktop/Broad/tj/exomecov/data/2021-03-31_gnomad_scz-exome-manifest.txt', sep = "\t", header=T)
View(ds)
paths <- subset(ds,grepl("^.+(.cram)$",cram)) # only selecting paths that end with .cram
dim(subset(ds,grepl("^.+(.cram)$",cram)))
dim(subset(ds,grepl("^.+(.cram)$",cram)))[1]
dim(subset(ds,grepl("^.+(.crai)$",cram)))[1]
dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
dim(subset(ds,grepl("^.+(.cram)$",cram)))[1] +
dim(subset(ds,grepl("^.+(.crai)$",cram)))[1] +
dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
library(stringr)
str_extract(ds$cram, ".c*")
dim(subset(ds,grepl("^.+(.cram)$",cram)))[1] +
dim(subset(ds,grepl("^.+(.crai)$",cram)))[1] +
dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
dim(subset(ds,grepl("^.+(.cram)$",cram)))[1]
dim(subset(ds,grepl("^.+(.crai)$",cram)))[1]
dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
View(paths)
paths <- subset(ds,grepl("^.+(.cram)$",cram)) %>% select(cram)# only selecting paths that end with .cram
# number of files paths with certain extensions
# dim(subset(ds,grepl("^.+(.cram)$",cram)))[1]
# dim(subset(ds,grepl("^.+(.crai)$",cram)))[1]
# dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
View(paths)
cram_paths <- subset(ds,grepl("^.+(.cram)$",cram)) %>% select(cram)# only selecting paths that end with .cram
colnames(cram_paths) <- NULL # formatting
View(cram_paths)
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data')
cram_paths <- subset(ds,grepl("^.+(.cram)$",cram)) %>% select(cram)# only select paths that end with .cram
colnames(cram_paths) <- NULL # f
knitr::opts_chunk$set(root.dir = '~/Desktop/Broad/tj/exomecov/data')
cram_paths <- subset(ds,grepl("^.+(.cram)$",cram)) %>% select(cram)# only select paths that end with .cram
colnames(cram_paths) <- NULL # formatting
# number of files paths with certain extensions
# dim(subset(ds,grepl("^.+(.cram)$",cram)))[1]
# dim(subset(ds,grepl("^.+(.crai)$",cram)))[1]
# dim(subset(ds,grepl("^.+(.c)$",cram)))[1]
# save as txt file
write.table(cram_paths,"cram_paths.txt",row.names=FALSE)
